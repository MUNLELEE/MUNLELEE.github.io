[{"content":"本来是不想用这篇博文作为新博客的第一篇的，但无奈修改这个主题以便让我能够看得舒服确实花费了我很多精力，因此想写下这一篇博文来记录这一历程，当然这次的修改也只是建博客时对于我来说最难以忍受的痛点，如果在使用的时候觉得还有值得修改的地方，那说不定就有第二站。不废话，直接开冲！\nTO-DO · 修改文章的字体为思源宋体（其实我喜欢行楷，但苦于还没有找到解决方法。。）\n· 修改站点图标\n· 修改站点名称并使其居中，同时具有一定的间隔。\n· 修改选中的样式\n· 站点头像居中（虽然本来应该就是居中了。。）\n· 添加主页按钮点击不会高亮的问题\n· 主页样式的修改\n· 修改左边栏头像大小\n· 返回顶部功能的添加\n· 修改Toc的样式\n· 修改分类的标签样式\n修改全站的字体 其实修改字体的方案主题的原作者已经给出，有需要的可以参考修改字体，作为一个中国人，好康的中文永远比好康的英文重要。 具体做法是在站点根目录中的layouts/partials/head/custom.html中添加如下代码：\n\u0026lt;style\u0026gt; :root { --article-font-family: \u0026#34;Noto Serif SC\u0026#34;, var(--base-font-family); } \u0026lt;/style\u0026gt; \u0026lt;script\u0026gt; // 正文自重300，标题字重700 \t(function () { const customFont = document.createElement(\u0026#39;link\u0026#39;); customFont.href = \u0026#34;https://fonts.googleapis.com/css2?family=Noto+Serif+SC:wght@400;700\u0026amp;display=swap\u0026#34;; customFont.type = \u0026#34;text/css\u0026#34;; customFont.rel = \u0026#34;stylesheet\u0026#34;; document.head.appendChild(customFont); }()); \u0026lt;/script\u0026gt; 以上是作者给出的，我只是在字重上做了修改。除此之外我还修改了hugo-theme-stack/assets/scss/variable.scss文件，具体就是调整了--zh-font-family和--base-font-family的顺序，代码如下：\n--zh-font-family: \u0026#34;Noto Serif SC\u0026#34;, \u0026#34;Hiragino Sans GB\u0026#34;, \u0026#34;Droid Sans Fallback\u0026#34;, \u0026#34;Microsoft YaHei\u0026#34;; --base-font-family: \u0026#34;Noto Serif SC\u0026#34;, var(--sys-font-family), var(--zh-font-family), sans-serif; 修改站点的图标 这个问题起先困扰了我很久（虽然期间可能已经修改好了，但因为网站cookie的原因导致修改没有及时显示），具体做法如下，先将你需要的图片转换为.ico文件（其它类型的图片文件应该也行），如需转换可以借助这个网站。之后将转换后的文件保存在网站根目录的static文件夹中。之后修改主题的配置文件config.yaml。\nparams: mainSections: - post featuredImageField: image rssFullContent: true favicon: favicon.ico 修改站点名称 站点名称对大家来说应该不是什么难事，这里就说说居中以及间隔。这里需要修改主题根目录的assets/scss/partials/siderbar.scss文件。如下：\n.site-name { color: var(--accent-color); margin: 0; font-size: 1.8rem; text-align: center; // 站点名称文本居中  @includerespond(2xl) { font-size: 2rem; } } .site-description { color: var(--body-text-color); font-weight: normal; margin: 10px 0; font-size: 1.2rem; text-align: center; // 站点描述居中  @includerespond(2xl) { font-size: 1.6rem; } } 当然如果站点名称之间具有一定的间隔的话，应该是会更美观一点的。方法是在layouts/partials/head/custom.html文件上加入以下代码\n\u0026lt;style\u0026gt; h1 { letter-spacing: 6px; } \u0026lt;/style\u0026gt; 这个代码将会对全站的h1标题进行修改，因此业也会导致其它h1标签也发生改变，但目前只注意到进入一个分类页面时，分类的字距变大了，因此我们需要将\n修改选中的样式 原来作者的选中样式和当前的大多数网站是一样的，给我一种十年前互联网的感觉，于是喜欢深色系的我修改了选中样式。需要在assets/scss/custom.scss文件中加入如下代码：\n::selection { color: #fff; background: #557697; } 站点头像居中 这个可能只是心理作用。。 同样是在assets/scss/partials/siderbar.scss文件中加入修改以下代码\n.site-avatar { position: relative; margin-left: auto; // 站点头像居中  margin-right: auto; // 站点头像居中  width: var(--sidebar-avatar-size); height: var(--sidebar-avatar-size); margin-bottom: var(--sidebar-element-separation); } 主页按钮高亮问题 这个虽然不算是什么大问题吧，但是主页不高亮我就觉得很难受。。于是就找到了layouts/partials/sidebar/left.html这个文件。我们可以看到一下代码：\n{{ $currentPage := . }} {{ range .Site.Menus.main }} {{ $active := or (eq $currentPage.Title .Name) (or ($currentPage.HasMenuCurrent \u0026#34;main\u0026#34; .)($currentPage.IsMenuCurrent \u0026#34;main\u0026#34; .)) }} 这段代码大概的逻辑就是如果当前的页面是菜单中的页面之一就设定为激活状态，而如果要让主页高亮的话需要加入以下代码：\n{{ $siteTitle := .Site.Title }} {{ $active := or ($active) (and (eq $currentPage.Title $siteTitle) (eq .Identifier \u0026#34;home\u0026#34;)) }} 这样就会使若当前的网站的标题等于网站名称就会令其为激活状态，而之后的Identifier则是为了区分主页页面，否则就会出现点击主页所有页面都是高亮的情况。\n主页样式的修改 第一次看到这个主题时就对它的主页布局感到不舒服，尤其是在笔记本电脑上挤满了整个屏幕令人难受，于是希望左右两边能够有一定的留白，这样可以美观一些。\n从开发者工具中我们可以得知主页的class是container，经过查找可以知道其样式是在assets/scss/grid.css中定义的。于是可以发现如下这段代码\n.container { margin-left: auto; margin-right: auto; .left-sidebar { max-width: var(--left-sidebar-max-width); margin-right: 1%; } .right-sidebar { max-width: var(--right-sidebar-max-width); /// Display right sidebar when min-width: lg  @includerespond(lg) { display: block; } } \u0026amp;.extended { @includerespond(md) { max-width: 1024px; --left-sidebar-max-width: 25%; --right-sidebar-max-width: 30%; } @includerespond(lg) { max-width: 1280px; --left-sidebar-max-width: 20%; --right-sidebar-max-width: 30%; } @includerespond(xl) { max-width: 1536px; --left-sidebar-max-width: 15%; --right-sidebar-max-width: 25%; } } } 这段代码对左边栏和右边栏进行了最大宽度的限制，这也就是我们要修改的地方。但是这其中的各个@include函数又代表什么呢？我们可以观察asset/scss/breakpoints.scss这个文件，如下：\n$breakpoints: ( sm: 640px, md: 768px, lg: 1024px, xl: 1280px, 2xl: 1536px, ); @mixinrespond($breakpoint) { @if not map-has-key($breakpoints, $breakpoint) { @warn \u0026#34;\u0026#39;#{$breakpoint}\u0026#39; is not a valid breakpoint\u0026#34;; } @else { @media (min-width: map-get($breakpoints, $breakpoint)) { @content; } } } 没有学过css的我也就只能大致看出这是封装了各种屏幕尺寸类似于map，而在笔记本电脑上，屏幕宽度是1024px以上的，因此我们只需要修改@include respond(lg)函数下的样式就可以了。在asset/scss/custom.scss下添加如下代码：\n.container { margin-left: auto; margin-right: auto; \u0026amp;.extended { /* range: 768-1024 */ @includerespond(md) { max-width: 1024px; --left-sidebar-max-width: 25%; --right-sidebar-max-width: 30%; } /* range: 1024-1280 */ @includerespond(lg) { // 修改主页的三个组件的显示比例  max-width: 1280px; --left-sidebar-max-width: 25%; --right-sidebar-max-width: 22%; } } \u0026amp;.compact { @includerespond(md) { --left-sidebar-max-width: 25%; max-width: 768px; } @includerespond(lg) { max-width: 1024px; --left-sidebar-max-width: 20%; } @includerespond(xl) { max-width: 1280px; } } } 至此，主页的修改也告一段落了。以上都是从这位大佬那里学来。\n修改左侧边栏头像的大小 左侧边栏的元素太多，显得实在有点挤，于是索性修改了一下博客的头像大小。需要在主题根目录下的assets/scss/partials/sidebar.scss文件。\n@includerespond(2xl) { --sidebar-avatar-size: 125px; // 修改头像大小的代码 --sidebar-element-separation: 10px; } 返回顶部按钮的添加 在参考过其它使用这个主题的博主之后发现，如果一篇文章太长，没有返回顶部这个按钮可能会在某些情况下造成体验的不舒适，于是决定加上这个功能。最开始是希望能够在一个页面的右下角添加这个按钮，但是无法解决页面缩放时显示位置与主页面之间的关系的问题，因此决定借助目录放置于目录的下方。\n首先是按钮的函数，参考了slim主题，具体是在layouts/partials/head/script.html中加入如下代码：\n\u0026lt;script src=\u0026#34;https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; // Check to see if the window is top if not then display button  $(window).scroll(function() { if ($(this).scrollTop()) { $(\u0026#39;#back-to-top\u0026#39;).fadeIn(); } else { $(\u0026#39;#back-to-top\u0026#39;).fadeOut(); } }); // Click event to scroll to top  $(\u0026#39;#back-to-top\u0026#39;).click(function() { $(\u0026#39;html, body\u0026#39;).animate({scrollTop: 0}, 1000); return false; }); \u0026lt;/script\u0026gt; 这段代码可以监听窗口抖动，从而控制按钮的显示和隐藏。\n然后是添加返回顶部的按钮，由于这个按钮需要和文章目录保持一个相对固定的位置，因此需要修改layouts/_default/single.html，在aside标签下加入如下代码：\n{{ $topImg := resources.Get (\u0026#34;img/top.png\u0026#34;) }} {{ $topImg := $topImg.Resize \u0026#34;40x\u0026#34; }} \u0026lt;a id=\u0026#34;back-to-top\u0026#34; href=\u0026#34;#\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;{{ $topImg.RelPermalink }}\u0026#34; /\u0026gt; \u0026lt;/a\u0026gt; 利用一张图片作为返回顶部的链接。最后我们需要通过css来为这个按钮添加样式。首先我们需要找到之前提过的custom.scss文件，在文件中加入如下代码：\n#go-top { bottom: -15px; right: 2px; display: none; position: absolute; border: 0; \u0026amp;:hover { filter: opacity(60%); // 悬停淡化  } 其中bottom值是我觉得可以避免当目录过长时会几乎占满整个屏幕，导致按钮没有地方放的问题。\n修改Toc样式 由于Toc每个标题之间的行间距有点大，于是就缩了缩，在custom.scss文件中又追加了如下的修改：\n.widget--toc { background-color: var(--card-background); border-radius: var(--card-border-radius); display: flex; flex-direction: column; color: var(--card-text-color-main); overflow: hidden; // display:inline-block;  font-size: 16px; #TableOfContents { overflow-x: auto; ol, ul { margin: 10; padding: 0; } ol { list-style-type: none; counter-reset: item; li:before { counter-increment: item; content: counters(item, \u0026#34;.\u0026#34;) \u0026#34;. \u0026#34;; font-weight: bold; margin-right: 0px; } } \u0026amp; \u0026gt; ul { padding: 0 1em; } li { margin: 5px 20px; padding: 6px; \u0026amp; \u0026gt; ol, \u0026amp; \u0026gt; ul { margin-top: 10px; padding-left: 6px; margin-bottom: -5px; \u0026amp; \u0026gt; li:last-child { margin-bottom: 0; } } } } } 修改分类标签样式 这个stack主题属实是有点迷，一样的主题推送到GitHub居然能产生不同的效果，无奈的我只能又去修改原先又大又丑的分类标签，根据我个人的喜好，将标签修改为小巧一点，放弃了原来的图片修饰，相关的代码写于custom.scss文件中：\n.subsection-list { margin-bottom: var(--section-separation); overflow-x: auto; .article-list--tile { display: flex; padding-bottom: 15px; article { width: 200px; // 修改分类的标签大小  height: 50px; margin-right: 5px; flex-shrink: 0; // box-shadow: var(--shadow-l2);  .article-title { margin: 0; font-size: 1.5rem; text-align: center; // 保证字居中美观一点  } .article-details { padding: 20px; justify-content: center; } } } } ","date":"2022-01-15T00:00:00Z","permalink":"https://MUNLELEE.github.io/post/hugo%E5%8D%9A%E5%AE%A2-stack%E4%B8%BB%E9%A2%98%E4%BF%AE%E6%94%B9%E7%AC%AC%E4%B8%80%E7%AB%99/","title":"Hugo博客 | stack主题修改第一站"}]